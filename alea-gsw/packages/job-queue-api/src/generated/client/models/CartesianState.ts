/* tslint:disable */
/* eslint-disable */
/**
 * Job Queue Service
 * Service to queue jobs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CartesianState
 */
export interface CartesianState {
    /**
     * 
     * @type {string}
     * @memberof CartesianState
     */
    type: CartesianStateTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    x: number;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    y: number;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    z: number;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    vx: number;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    vy: number;
    /**
     * 
     * @type {number}
     * @memberof CartesianState
     */
    vz: number;
}


/**
 * @export
 */
export const CartesianStateTypeEnum = {
    Cartesian: 'cartesian'
} as const;
export type CartesianStateTypeEnum = typeof CartesianStateTypeEnum[keyof typeof CartesianStateTypeEnum];


/**
 * Check if a given object implements the CartesianState interface.
 */
export function instanceOfCartesianState(value: object): value is CartesianState {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('x' in value) || value['x'] === undefined) return false;
    if (!('y' in value) || value['y'] === undefined) return false;
    if (!('z' in value) || value['z'] === undefined) return false;
    if (!('vx' in value) || value['vx'] === undefined) return false;
    if (!('vy' in value) || value['vy'] === undefined) return false;
    if (!('vz' in value) || value['vz'] === undefined) return false;
    return true;
}

export function CartesianStateFromJSON(json: any): CartesianState {
    return CartesianStateFromJSONTyped(json, false);
}

export function CartesianStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartesianState {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'x': json['x'],
        'y': json['y'],
        'z': json['z'],
        'vx': json['vx'],
        'vy': json['vy'],
        'vz': json['vz'],
    };
}

export function CartesianStateToJSON(value?: CartesianState | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'x': value['x'],
        'y': value['y'],
        'z': value['z'],
        'vx': value['vx'],
        'vy': value['vy'],
        'vz': value['vz'],
    };
}

