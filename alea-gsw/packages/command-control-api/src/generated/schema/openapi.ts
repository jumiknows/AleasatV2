/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/mission-execution/schedule": {
    /** Schedule a mission execute */
    post: operations["scheduleMissionExecution"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ScheduledMission: {
      /** Format: uuid */
      id: string;
      /** Format: date-time */
      initialOverheadStart: string;
      commands: components["schemas"]["ScheduledCommand"][];
    };
    ScheduledCommand: {
      /** Format: uuid */
      id: string;
      sequenceNumber: number;
      /** Format: date-time */
      scheduledAt: string;
    };
    Error: {
      /**
       * Format: int32
       * @description The HTTP status code
       */
      code: number;
      /** @description The error */
      message: string;
    };
    /** @description An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807). */
    Problem: {
      /** @description The details of the problem */
      detail?: string;
      /** @description The HTTP status code */
      status: number;
      /** @description The type of error (text) */
      title: string;
      /** @description The type of error (URL) */
      type?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Schedule a mission execute */
  scheduleMissionExecution: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduledMission"];
      };
    };
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description The request has failed. */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
          "application/problem+json": components["schemas"]["Problem"];
        };
      };
    };
  };
}
