/* tslint:disable */
/* eslint-disable */
/**
 * Pass Scheduling
 * abcd
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  Problem,
  ReadMissionScheduleMission,
  ReadMissionScheduleSpace,
} from '../models/index.js';
import {
    ProblemFromJSON,
    ProblemToJSON,
    ReadMissionScheduleMissionFromJSON,
    ReadMissionScheduleMissionToJSON,
    ReadMissionScheduleSpaceFromJSON,
    ReadMissionScheduleSpaceToJSON,
} from '../models/index.js';

export interface GetScheduledMissionRequest {
    missionId: string;
}

/**
 * 
 */
export class MissionScheduleApi extends runtime.BaseAPI {

    /**
     * Get schedule spaces
     * Get schedule spaces
     */
    async getScheduleSpacesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ReadMissionScheduleSpace>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/mission-schedule/spaces`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ReadMissionScheduleSpaceFromJSON));
    }

    /**
     * Get schedule spaces
     * Get schedule spaces
     */
    async getScheduleSpaces(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ReadMissionScheduleSpace>> {
        const response = await this.getScheduleSpacesRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get a scheduled mission
     * Get a scheduled mission
     */
    async getScheduledMissionRaw(requestParameters: GetScheduledMissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReadMissionScheduleMission>> {
        if (requestParameters['missionId'] == null) {
            throw new runtime.RequiredError(
                'missionId',
                'Required parameter "missionId" was null or undefined when calling getScheduledMission().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/mission-schedule/missions/{missionId}`.replace(`{${"missionId"}}`, encodeURIComponent(String(requestParameters['missionId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadMissionScheduleMissionFromJSON(jsonValue));
    }

    /**
     * Get a scheduled mission
     * Get a scheduled mission
     */
    async getScheduledMission(requestParameters: GetScheduledMissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReadMissionScheduleMission> {
        const response = await this.getScheduledMissionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get scheduled missions
     * Get scheduled missions
     */
    async getScheduledMissionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ReadMissionScheduleMission>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/mission-schedule/missions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ReadMissionScheduleMissionFromJSON));
    }

    /**
     * Get scheduled missions
     * Get scheduled missions
     */
    async getScheduledMissions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ReadMissionScheduleMission>> {
        const response = await this.getScheduledMissionsRaw(initOverrides);
        return await response.value();
    }

}
