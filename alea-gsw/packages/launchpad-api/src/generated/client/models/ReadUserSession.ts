/* tslint:disable */
/* eslint-disable */
/**
 * LP Manager Service
 * Service to manage LP
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface ReadUserSession
 */
export interface ReadUserSession {
    /**
     * 
     * @type {string}
     * @memberof ReadUserSession
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ReadUserSession
     */
    userId: string;
    /**
     * 
     * @type {Date}
     * @memberof ReadUserSession
     */
    startAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReadUserSession
     */
    endAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ReadUserSession
     */
    launchpadId: string;
}

/**
 * Check if a given object implements the ReadUserSession interface.
 */
export function instanceOfReadUserSession(value: object): value is ReadUserSession {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('startAt' in value) || value['startAt'] === undefined) return false;
    if (!('endAt' in value) || value['endAt'] === undefined) return false;
    if (!('launchpadId' in value) || value['launchpadId'] === undefined) return false;
    return true;
}

export function ReadUserSessionFromJSON(json: any): ReadUserSession {
    return ReadUserSessionFromJSONTyped(json, false);
}

export function ReadUserSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadUserSession {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'startAt': (new Date(json['startAt'])),
        'endAt': (new Date(json['endAt'])),
        'launchpadId': json['launchpadId'],
    };
}

export function ReadUserSessionToJSON(value?: ReadUserSession | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'startAt': ((value['startAt']).toISOString()),
        'endAt': ((value['endAt']).toISOString()),
        'launchpadId': value['launchpadId'],
    };
}

