/* tslint:disable */
/* eslint-disable */
/**
 * Job Queue Service
 * Service to queue jobs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface Command
 */
export interface Command {
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    submitedAt: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    imageRequestId?: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    command: string;
    /**
     * 
     * @type {number}
     * @memberof Command
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof Command
     */
    power: number;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    passId?: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    sentAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Command
     */
    resultId?: string;
}

/**
 * Check if a given object implements the Command interface.
 */
export function instanceOfCommand(value: object): value is Command {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('submitedAt' in value) || value['submitedAt'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('command' in value) || value['command'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('power' in value) || value['power'] === undefined) return false;
    return true;
}

export function CommandFromJSON(json: any): Command {
    return CommandFromJSONTyped(json, false);
}

export function CommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): Command {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'submitedAt': json['submitedAt'],
        'userId': json['userId'],
        'imageRequestId': json['imageRequestId'] == null ? undefined : json['imageRequestId'],
        'command': json['command'],
        'size': json['size'],
        'power': json['power'],
        'passId': json['passId'] == null ? undefined : json['passId'],
        'sentAt': json['sentAt'] == null ? undefined : json['sentAt'],
        'resultId': json['resultId'] == null ? undefined : json['resultId'],
    };
}

export function CommandToJSON(value?: Command | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'submitedAt': value['submitedAt'],
        'userId': value['userId'],
        'imageRequestId': value['imageRequestId'],
        'command': value['command'],
        'size': value['size'],
        'power': value['power'],
        'passId': value['passId'],
        'sentAt': value['sentAt'],
        'resultId': value['resultId'],
    };
}

