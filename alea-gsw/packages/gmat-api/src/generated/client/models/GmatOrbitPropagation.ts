/* tslint:disable */
/* eslint-disable */
/**
 * GMAT
 * abcd
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StateElement } from './StateElement.js';
import {
    StateElementFromJSON,
    StateElementFromJSONTyped,
    StateElementToJSON,
} from './StateElement.js';
import type { GmatOrbitPropagationResultInner } from './GmatOrbitPropagationResultInner.js';
import {
    GmatOrbitPropagationResultInnerFromJSON,
    GmatOrbitPropagationResultInnerFromJSONTyped,
    GmatOrbitPropagationResultInnerToJSON,
} from './GmatOrbitPropagationResultInner.js';

/**
 * 
 * @export
 * @interface GmatOrbitPropagation
 */
export interface GmatOrbitPropagation {
    /**
     * 
     * @type {StateElement}
     * @memberof GmatOrbitPropagation
     */
    stateElement: StateElement;
    /**
     * 
     * @type {string}
     * @memberof GmatOrbitPropagation
     */
    stateId: string;
    /**
     * 
     * @type {Array<GmatOrbitPropagationResultInner>}
     * @memberof GmatOrbitPropagation
     */
    result: Array<GmatOrbitPropagationResultInner>;
}

/**
 * Check if a given object implements the GmatOrbitPropagation interface.
 */
export function instanceOfGmatOrbitPropagation(value: object): value is GmatOrbitPropagation {
    if (!('stateElement' in value) || value['stateElement'] === undefined) return false;
    if (!('stateId' in value) || value['stateId'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    return true;
}

export function GmatOrbitPropagationFromJSON(json: any): GmatOrbitPropagation {
    return GmatOrbitPropagationFromJSONTyped(json, false);
}

export function GmatOrbitPropagationFromJSONTyped(json: any, ignoreDiscriminator: boolean): GmatOrbitPropagation {
    if (json == null) {
        return json;
    }
    return {
        
        'stateElement': StateElementFromJSON(json['stateElement']),
        'stateId': json['stateId'],
        'result': ((json['result'] as Array<any>).map(GmatOrbitPropagationResultInnerFromJSON)),
    };
}

export function GmatOrbitPropagationToJSON(value?: GmatOrbitPropagation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'stateElement': StateElementToJSON(value['stateElement']),
        'stateId': value['stateId'],
        'result': ((value['result'] as Array<any>).map(GmatOrbitPropagationResultInnerToJSON)),
    };
}

