{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build",
            "type": "shell",
            "command": "./scripts/fw_build_docker.sh ${input:platform} ${input:target} ${input:slot} ${input:standalone} ${input:comms_over_serial}",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "\"/usr/local/src/repo/alea-fsw/obc-fw(.*)\", line (\\d+)(?: \\(col. (\\d+)\\))?: (remark|info|warning|(?:|fatal |catastrophic )error) #\\d+(?:-D)?: (.*)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5,
                }
            }
        },
        {
            "label": "Flash",
            "type": "shell",
            "command": "dslite --verbose --flash --run --config=tools/debug/ccs/${input:platform}.ccxml build/${input:platform}/${input:target}/${input:slot}/ALEA_OBC.elf",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
        {
            "label": "Run Unit Tests",
            "type": "shell",
            "command": "./scripts/fw_test_docker.sh",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "problemMatcher": [],
        },
        {
            "label": "Check Code Style",
            "type": "shell",
            "command": "./scripts/formatter_docker.sh --dry-run",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "./scripts/formatter_docker.sh",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
        {
            "label": "Clean Build",
            "type": "shell",
            "command": "if [ \"${input:confirm}\" = \"Yes\" ]; then rm -rf build; fi",
            "presentation": {
                "reveal": "silent",
                "close": true,
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
        {
            "label": "Clean Unit Tests",
            "type": "shell",
            "command": "if [ \"${input:confirm}\" = \"Yes\" ]; then rm -rf test/build; fi",
            "presentation": {
                "reveal": "silent",
                "close": true,
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
    ],
    "inputs": [
        {
            "id": "platform",
            "type": "pickString",
            "description": "Select a hardware platform",
            "options": [
                "launchpad",
                "alea-v1"
            ],
            "default": "alea-v1"
        },
        {
            "id": "target",
            "type": "pickString",
            "description": "Select a build target",
            "options": [
                "startup",
                "boot",
                "core",
                "ext"
            ],
            "default": "ext"
        },
        {
            "id": "slot",
            "type": "pickString",
            "description": "Select a flash slot",
            "options": [
                "A",
                "B",
            ],
            "default": "A"
        },
        {
            "id": "standalone",
            "type": "pickString",
            "description": "Build standalone image?",
            "options": [
                "--standalone",
                "",
            ],
            "default": "--standalone"
        },
        {
            "id": "comms_over_serial",
            "type": "pickString",
            "description": "COMMS over serial?",
            "options": [
                "--comms-over-serial",
                "",
            ],
            "default": "--comms-over-serial"
        },
        {
            "id": "confirm",
            "type": "pickString",
            "description": "Are you sure?",
            "options": [
                "Yes",
                "No"
            ],
            "default": "no",
        },
    ]
}
