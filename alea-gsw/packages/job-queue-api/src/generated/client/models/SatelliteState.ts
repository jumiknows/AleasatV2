/* tslint:disable */
/* eslint-disable */
/**
 * Job Queue Service
 * Service to queue jobs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StateElement } from './StateElement.js';
import {
    StateElementFromJSON,
    StateElementFromJSONTyped,
    StateElementToJSON,
} from './StateElement.js';

/**
 * 
 * @export
 * @interface SatelliteState
 */
export interface SatelliteState {
    /**
     * 
     * @type {string}
     * @memberof SatelliteState
     */
    epochFormat: SatelliteStateEpochFormatEnum;
    /**
     * 
     * @type {string}
     * @memberof SatelliteState
     */
    epoch: string;
    /**
     * 
     * @type {string}
     * @memberof SatelliteState
     */
    coordinateSystem: SatelliteStateCoordinateSystemEnum;
    /**
     * 
     * @type {StateElement}
     * @memberof SatelliteState
     */
    stateElement: StateElement;
    /**
     * 
     * @type {string}
     * @memberof SatelliteState
     */
    stateId: string;
}


/**
 * @export
 */
export const SatelliteStateEpochFormatEnum = {
    UtcGregorian: 'UTCGregorian'
} as const;
export type SatelliteStateEpochFormatEnum = typeof SatelliteStateEpochFormatEnum[keyof typeof SatelliteStateEpochFormatEnum];

/**
 * @export
 */
export const SatelliteStateCoordinateSystemEnum = {
    EarthMj2000Eq: 'EarthMJ2000Eq',
    EarthMj2000Ec: 'EarthMJ2000Ec'
} as const;
export type SatelliteStateCoordinateSystemEnum = typeof SatelliteStateCoordinateSystemEnum[keyof typeof SatelliteStateCoordinateSystemEnum];


/**
 * Check if a given object implements the SatelliteState interface.
 */
export function instanceOfSatelliteState(value: object): value is SatelliteState {
    if (!('epochFormat' in value) || value['epochFormat'] === undefined) return false;
    if (!('epoch' in value) || value['epoch'] === undefined) return false;
    if (!('coordinateSystem' in value) || value['coordinateSystem'] === undefined) return false;
    if (!('stateElement' in value) || value['stateElement'] === undefined) return false;
    if (!('stateId' in value) || value['stateId'] === undefined) return false;
    return true;
}

export function SatelliteStateFromJSON(json: any): SatelliteState {
    return SatelliteStateFromJSONTyped(json, false);
}

export function SatelliteStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): SatelliteState {
    if (json == null) {
        return json;
    }
    return {
        
        'epochFormat': json['epochFormat'],
        'epoch': json['epoch'],
        'coordinateSystem': json['coordinateSystem'],
        'stateElement': StateElementFromJSON(json['stateElement']),
        'stateId': json['stateId'],
    };
}

export function SatelliteStateToJSON(value?: SatelliteState | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'epochFormat': value['epochFormat'],
        'epoch': value['epoch'],
        'coordinateSystem': value['coordinateSystem'],
        'stateElement': StateElementToJSON(value['stateElement']),
        'stateId': value['stateId'],
    };
}

