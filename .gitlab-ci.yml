.build:
  stage: build
  image:
    name: registry.gitlab.com/alea-2020/command-data-handling/obc2-firmware/obc-fw-build-tools:1.2
    entrypoint: [""]
  before_script:
    - cd obc-firmware
  only:
    - merge_requests
    - web
  artifacts:
      when: always
      paths:
          - "obc-firmware/build/_bin/*.mot"
          - "obc-firmware/build/**/*.elf"
      expire_in: 1 month

.test:
  stage: test
  tags:
    - obc-alea-v1-runner
  before_script:
    - echo "Using Python ${ALEA_PY_VER}"
    - cd hil-tests
    - python${ALEA_PY_VER} -m pipenv install --python ${ALEA_PY_VER}
    - cd ../
    - echo "OBC connected to ${ALEA_OBC_PORT}"
  only:
    - merge_requests
    - web
  artifacts:
    when: always
    paths:
        - "hil-tests/results/*.xml"
    reports:
      junit:
          - "hil-tests/results/*.xml"

build-launchpad-ext:
  extends: .build
  script:
    - ./cmake_wrapper.sh launchpad ext A --standalone

build-alea-v1-startup:
  extends: .build
  script:
    - ./cmake_wrapper.sh alea-v1 startup A --standalone

build-alea-v1-ext:
  extends: .build
  script:
    - ./cmake_wrapper.sh alea-v1 ext A

build-alea-v1:
  extends: .build
  dependencies:
    - build-alea-v1-startup
    - build-alea-v1-ext
  needs:
    - build-alea-v1-startup
    - build-alea-v1-ext
  script:
    - python3 tools/build_sys/srec.py merge -i build/_bin/*.mot -o build/_bin/ALEA_OBC_alea-v1_combined_${CI_COMMIT_SHORT_SHA}.mot

test-alea-v1:
  extends: .test
  dependencies:
    - build-alea-v1
  needs:
    - build-alea-v1
  script:
    - obc-firmware/tools/infra/jlink-flash-alea-v1.sh -f obc-firmware/build/_bin/ALEA_OBC_alea-v1_combined_${CI_COMMIT_SHORT_SHA}.mot
    - cd hil-tests
    - python${ALEA_PY_VER} -m pipenv run ./run.sh
