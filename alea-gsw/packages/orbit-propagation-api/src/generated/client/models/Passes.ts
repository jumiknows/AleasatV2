/* tslint:disable */
/* eslint-disable */
/**
 * Orbit Propagation
 * abcd
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StateElement } from './StateElement.js';
import {
    StateElementFromJSON,
    StateElementFromJSONTyped,
    StateElementToJSON,
} from './StateElement.js';
import type { PassesPassesInner } from './PassesPassesInner.js';
import {
    PassesPassesInnerFromJSON,
    PassesPassesInnerFromJSONTyped,
    PassesPassesInnerToJSON,
} from './PassesPassesInner.js';

/**
 * 
 * @export
 * @interface Passes
 */
export interface Passes {
    /**
     * 
     * @type {number}
     * @memberof Passes
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof Passes
     */
    longitude: number;
    /**
     * 
     * @type {string}
     * @memberof Passes
     */
    stateId: string;
    /**
     * 
     * @type {StateElement}
     * @memberof Passes
     */
    stateElement: StateElement;
    /**
     * 
     * @type {Array<PassesPassesInner>}
     * @memberof Passes
     */
    passes: Array<PassesPassesInner>;
}

/**
 * Check if a given object implements the Passes interface.
 */
export function instanceOfPasses(value: object): value is Passes {
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('stateId' in value) || value['stateId'] === undefined) return false;
    if (!('stateElement' in value) || value['stateElement'] === undefined) return false;
    if (!('passes' in value) || value['passes'] === undefined) return false;
    return true;
}

export function PassesFromJSON(json: any): Passes {
    return PassesFromJSONTyped(json, false);
}

export function PassesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Passes {
    if (json == null) {
        return json;
    }
    return {
        
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'stateId': json['stateId'],
        'stateElement': StateElementFromJSON(json['stateElement']),
        'passes': ((json['passes'] as Array<any>).map(PassesPassesInnerFromJSON)),
    };
}

export function PassesToJSON(value?: Passes | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'stateId': value['stateId'],
        'stateElement': StateElementToJSON(value['stateElement']),
        'passes': ((value['passes'] as Array<any>).map(PassesPassesInnerToJSON)),
    };
}

