/* tslint:disable */
/* eslint-disable */
/**
 * Orbit Propagation
 * abcd
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CartesianState } from './CartesianState.js';
import {
    instanceOfCartesianState,
    CartesianStateFromJSON,
    CartesianStateFromJSONTyped,
    CartesianStateToJSON,
} from './CartesianState.js';
import type { KeplerianState } from './KeplerianState.js';
import {
    instanceOfKeplerianState,
    KeplerianStateFromJSON,
    KeplerianStateFromJSONTyped,
    KeplerianStateToJSON,
} from './KeplerianState.js';

/**
 * @type StateElement
 * 
 * @export
 */
export type StateElement = { type: 'cartesian' } & CartesianState | { type: 'keplerian' } & KeplerianState;

export function StateElementFromJSON(json: any): StateElement {
    return StateElementFromJSONTyped(json, false);
}

export function StateElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateElement {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'cartesian':
            return Object.assign({}, CartesianStateFromJSONTyped(json, true), { type: 'cartesian' });
        case 'keplerian':
            return Object.assign({}, KeplerianStateFromJSONTyped(json, true), { type: 'keplerian' });
        default:
            throw new Error(`No variant of StateElement exists with 'type=${json['type']}'`);
    }
}

export function StateElementToJSON(value?: StateElement | null): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'cartesian':
            return CartesianStateToJSON(value);
        case 'keplerian':
            return KeplerianStateToJSON(value);
        default:
            throw new Error(`No variant of StateElement exists with 'type=${value['type']}'`);
    }

}

