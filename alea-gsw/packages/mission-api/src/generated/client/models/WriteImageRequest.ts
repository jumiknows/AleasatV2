/* tslint:disable */
/* eslint-disable */
/**
 * Mission Service
 * Service to manage the missions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface WriteImageRequest
 */
export interface WriteImageRequest {
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    coordX: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    coordY: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    coordZ: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    quaternionW: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    quaternionX: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    quaternionY: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    quaternionZ: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    fStop: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    focus: number;
    /**
     * 
     * @type {number}
     * @memberof WriteImageRequest
     */
    iSO: number;
    /**
     * 
     * @type {string}
     * @memberof WriteImageRequest
     */
    userId: string;
    /**
     * 
     * @type {Date}
     * @memberof WriteImageRequest
     */
    requestedAt: Date;
}

/**
 * Check if a given object implements the WriteImageRequest interface.
 */
export function instanceOfWriteImageRequest(value: object): value is WriteImageRequest {
    if (!('coordX' in value) || value['coordX'] === undefined) return false;
    if (!('coordY' in value) || value['coordY'] === undefined) return false;
    if (!('coordZ' in value) || value['coordZ'] === undefined) return false;
    if (!('quaternionW' in value) || value['quaternionW'] === undefined) return false;
    if (!('quaternionX' in value) || value['quaternionX'] === undefined) return false;
    if (!('quaternionY' in value) || value['quaternionY'] === undefined) return false;
    if (!('quaternionZ' in value) || value['quaternionZ'] === undefined) return false;
    if (!('fStop' in value) || value['fStop'] === undefined) return false;
    if (!('focus' in value) || value['focus'] === undefined) return false;
    if (!('iSO' in value) || value['iSO'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('requestedAt' in value) || value['requestedAt'] === undefined) return false;
    return true;
}

export function WriteImageRequestFromJSON(json: any): WriteImageRequest {
    return WriteImageRequestFromJSONTyped(json, false);
}

export function WriteImageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WriteImageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'coordX': json['coordX'],
        'coordY': json['coordY'],
        'coordZ': json['coordZ'],
        'quaternionW': json['QuaternionW'],
        'quaternionX': json['QuaternionX'],
        'quaternionY': json['QuaternionY'],
        'quaternionZ': json['QuaternionZ'],
        'fStop': json['fStop'],
        'focus': json['focus'],
        'iSO': json['ISO'],
        'userId': json['userId'],
        'requestedAt': (new Date(json['requestedAt'])),
    };
}

export function WriteImageRequestToJSON(value?: WriteImageRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordX': value['coordX'],
        'coordY': value['coordY'],
        'coordZ': value['coordZ'],
        'QuaternionW': value['quaternionW'],
        'QuaternionX': value['quaternionX'],
        'QuaternionY': value['quaternionY'],
        'QuaternionZ': value['quaternionZ'],
        'fStop': value['fStop'],
        'focus': value['focus'],
        'ISO': value['iSO'],
        'userId': value['userId'],
        'requestedAt': ((value['requestedAt']).toISOString()),
    };
}

