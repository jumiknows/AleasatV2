{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Firmware",
            "type": "shell",
            "command": "./scripts/fw_build.sh ${input:platform} ${input:target} ${input:slot} ${input:standalone} ${input:comms_over_serial}",
            "options": {
                "cwd": "${workspaceFolder}/obc-firmware"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/obc-firmware"
                ],
                "pattern": {
                    "regexp": "\"/usr/local/src/repo/obc-firmware(.*)\", line (\\d+): (info|warning|(?:|fatal |catastrophic )error): (\\((.*)\\) )?(.*)",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "code": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "San Antonio",
            "type": "shell",
            "command": "pipenv run python main.py",
            "options": {
                "cwd": "${workspaceFolder}/san-antonio"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "San Antonio - Build UI",
            "type": "shell",
            "command": "./build_ui.sh ${input:sa_ui_file}",
            "options": {
                "cwd": "${workspaceFolder}/san-antonio/sanantonio/ui"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "WSL Attach USB",
            "type": "shell",
            "command": "usbipd.exe attach --wsl --busid ${input:busid} && usbipd.exe list | sed '1p;$p;/${input:busid}/!d'",
            "problemMatcher": []
        },
        {
            "label": "WSL Detach USB",
            "type": "shell",
            "command": "usbipd.exe detach --busid ${input:busid} && usbipd.exe list | sed '1p;$p;/${input:busid}/!d'",
            "problemMatcher": []
        },
        {
            "label": "Test Firmware",
            "type": "shell",
            "command": "./scripts/fw_test.sh",
            "options": {
                "cwd": "${workspaceFolder}/obc-firmware"
            },
            "group": "test",
        },
        {
            "label": "San Antonio - Build Executable",
            "type": "shell",
            "command": "pipenv run python build.py",
            "options": {
              "cwd": "${workspaceFolder}/san-antonio"
            }
          },
        {
            "label": "Format code style",
            "type": "shell",
            "command": "./docker_wrapper.sh ./scripts/check-style.sh",
            "options": {
                "cwd": "${workspaceFolder}/obc-firmware/scripts"
            },
            "problemMatcher": []
        }

    ],
    "inputs": [
        {
            "id": "platform",
            "type": "pickString",
            "description": "Select a hardware platform",
            "options": [
                "launchpad",
                "alea-v1"
            ],
            "default": "alea-v1"
        },
        {
            "id": "target",
            "type": "pickString",
            "description": "Select a build target",
            "options": [
                "startup",
                "boot",
                "core",
                "ext"
            ],
            "default": "ext"
        },
        {
            "id": "slot",
            "type": "pickString",
            "description": "Select a flash slot",
            "options": [
                "A",
                "B",
            ],
            "default": "A"
        },
        {
            "id": "standalone",
            "type": "pickString",
            "description": "Build standalone image?",
            "options": [
                "--standalone",
                "",
            ],
            "default": "--standalone"
        },
        {
            "id": "comms_over_serial",
            "type": "pickString",
            "description": "COMMS over serial?",
            "options": [
                "--comms-over-serial",
                "",
            ],
            "default": "--comms-over-serial"
        },
        {
            "id": "sa_ui_file",
            "type": "command",
            // Need to have the Task Shell Input extension installed:
            // https://marketplace.visualstudio.com/items?itemName=augustocdias.tasks-shell-input
            "command": "shellCommand.execute",
            "args": {
                "command": "find * -iname '*.ui' | sed 's/.ui$//'",
                "cwd": "${workspaceFolder}/san-antonio/sanantonio/ui",
                "description": "Select UI to build"
            }
        },
        {
            "id": "busid",
            "type": "command",
            // Need to have the Task Shell Input extension installed:
            // https://marketplace.visualstudio.com/items?itemName=augustocdias.tasks-shell-input
            "command": "shellCommand.execute",
            "args": {
                // This ridiculous command (I can't believe I'm actually using perl) restructures the output of `usbipd.exe wsl list`
                // by pumping it through a perl regex-based substitution so that the Task Shell Input extension can parse it into
                // a collection of fields for the dropdown list
                "command": "usbipd.exe list | perl -ne 'print if s/^(\\d+-\\d+)\\s+([a-f0-9]{4}:[a-f0-9]{4})\\s+([^\\s].+?)\\s+(Attached.*|Not attached.*|Shared.*|Not shared.*)$/\\1%%%\\3%%%\\2%%%\\4/'",
                "fieldSeparator": "%%%",
                "description": "Select the OBC USB serial device"
            }
        },
    ]
}
