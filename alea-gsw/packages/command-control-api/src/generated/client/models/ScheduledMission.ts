/* tslint:disable */
/* eslint-disable */
/**
 * Command Control
 * Command Control SVC
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ScheduledCommand } from './ScheduledCommand.js';
import {
    ScheduledCommandFromJSON,
    ScheduledCommandFromJSONTyped,
    ScheduledCommandToJSON,
} from './ScheduledCommand.js';

/**
 * 
 * @export
 * @interface ScheduledMission
 */
export interface ScheduledMission {
    /**
     * 
     * @type {string}
     * @memberof ScheduledMission
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ScheduledMission
     */
    initialOverheadStart: Date;
    /**
     * 
     * @type {Array<ScheduledCommand>}
     * @memberof ScheduledMission
     */
    commands: Array<ScheduledCommand>;
}

/**
 * Check if a given object implements the ScheduledMission interface.
 */
export function instanceOfScheduledMission(value: object): value is ScheduledMission {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('initialOverheadStart' in value) || value['initialOverheadStart'] === undefined) return false;
    if (!('commands' in value) || value['commands'] === undefined) return false;
    return true;
}

export function ScheduledMissionFromJSON(json: any): ScheduledMission {
    return ScheduledMissionFromJSONTyped(json, false);
}

export function ScheduledMissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledMission {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'initialOverheadStart': (new Date(json['initialOverheadStart'])),
        'commands': ((json['commands'] as Array<any>).map(ScheduledCommandFromJSON)),
    };
}

export function ScheduledMissionToJSON(value?: ScheduledMission | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'initialOverheadStart': ((value['initialOverheadStart']).toISOString()),
        'commands': ((value['commands'] as Array<any>).map(ScheduledCommandToJSON)),
    };
}

