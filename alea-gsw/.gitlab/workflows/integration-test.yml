spec:
  inputs:
    package:
---
"$[[ inputs.package ]] Integration Test":
  stage: test
  image: node:22
  needs:
    - Build Dist
  before_script:
    - cd alea-gsw
  script:
    - yarn workspaces focus @aleasat/$[[ inputs.package ]] barbours-cut
    - YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
    # - if [ "$[[ inputs.package ]]" == "command-request" ]; then apt-get update && apt-get install -y ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils; fi
    - yarn test:ci-integration --cache-dir=".turbo" --filter=@aleasat/$[[ inputs.package ]]
  after_script:
    - mv alea-gsw/apps/$[[ inputs.package ]]/test-results.xml . || true
    - mv alea-gsw/apps/$[[ inputs.package ]]/coverage . || true
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  cache:
    - key: yarn-cache
      paths:
        - "alea-gsw/.yarn/cache"
      policy: pull
    - key: turbo-build
      paths:
        - "alea-gsw/.turbo"
      policy: pull
  artifacts:
    when: always
    paths:
      - test-results.xml
      - coverage/cobertura-coverage.xml
    reports:
      junit: test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
