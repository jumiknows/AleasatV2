{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "linter": {
    "rules": {
      "recommended": false,
      "a11y": {
        "noAriaUnsupportedElements": "warn",
        "noBlankTarget": "off",
        "useAltText": "warn",
        "useAriaPropsForRole": "warn",
        "useValidAriaProps": "warn",
        "useValidAriaValues": "warn"
      },
      "complexity": {
        "noBannedTypes": "error",
        "noExtraBooleanCast": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noStaticOnlyClass": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessTernary": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noUselessUndefinedInitialization": "error",
        "noVoid": "error",
        "noWith": "error",
        "useArrowFunction": "off",
        "useLiteralKeys": "error",
        "useOptionalChain": "error",
        "useRegexLiterals": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNewSymbol": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "off",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "off",
        "useIsNan": "error",
        "noChildrenProp": "error",
        "useHookAtTopLevel": "error",
        "useJsxKeyInIterable": "error",
        "useImportExtensions": {
          "level": "error",
          "options": {
            "suggestedExtensions": {
              "ts": {
                "module": "js",
                "component": "jsx"
              },
              "tsx": {
                "module": "js",
                "component": "jsx"
              }
            }
          }
        }
      },
      "security": {
        "noGlobalEval": "error",
        "noDangerouslySetInnerHtmlWithChildren": "error"
      },
      "style": {
        "noCommaOperator": "error",
        "noNamespace": "error",
        "noNonNullAssertion": "off",
        "noVar": "warn",
        "noYodaExpression": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useConsistentBuiltinInstantiation": "error",
        "useConst": "error",
        "useExportType": "error",
        "useImportType": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "variable"
                },
                "match": "_?(.+)",
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "function"
                },
                "match": "_?(.+)",
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "classProperty"
                },
                "match": ".*"
              },
              {
                "selector": {
                  "kind": "typeProperty"
                },
                "match": ".*"
              },
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "match": ".*"
              }
            ]
          }
        },
        "useShorthandFunctionType": "error",
        "useSingleVarDeclarator": "error",
        "useThrowOnlyError": "off"
      },
      "suspicious": {
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noConfusingVoidType": "off",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noEmptyInterface": "error",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeNegation": "error",
        "useDefaultSwitchClauseLast": "error",
        "useValidTypeof": "error",
        "noCommentText": "error",
        "noDuplicateJsxProps": "error"
      }
    }
  },
  "formatter": {
    "indentStyle": "space"
  },
  "javascript": {
    "globals": ["document", "navigator", "window"]
  },
  "files": {
    "include": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "tests/**/*.ts",
      "tests/**/*.tsx"
    ],
    "ignore": ["**/generated/**"]
  },
  "overrides": [
    {
      "include": [
        "apps/aleasat-site/src/*",
        "apps/dashboard/src/*",
        "apps/aleasat-docs/src/*",
        "packages/ui/src/*"
      ],
      "linter": {
        "rules": {
          "correctness": {
            "useImportExtensions": "off"
          }
        }
      }
    }
  ]
}
